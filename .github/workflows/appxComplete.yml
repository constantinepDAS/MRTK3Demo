name: Build project

on:
  workflow_dispatch:

jobs:
  # buildForWSAPlayer:
  #   name: Build for ${{ matrix.targetPlatform }}
  #   runs-on: windows-2019
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       unityVersion:
  #         - 2020.3.24f1
  #       targetPlatform:
  #         - WSAPlayer # Build a UWP App.
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #         lfs: true
  #     - uses: actions/cache@v3
  #       with:
  #         path: Library
  #         key: Library-${{ matrix.targetPlatform }}
  #         restore-keys: Library-
  #     - uses: game-ci/unity-builder@v2
  #       env:
  #         UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  #         UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  #         UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  #       with:
  #         unityVersion: ${{ matrix.unityVersion }}
  #         targetPlatform: ${{ matrix.targetPlatform }}
  #     - uses: actions/cache@v3
  #       with:
  #         path: build/${{ matrix.targetPlatform }}
  #         key: Build-${{ matrix.targetPlatform }}
  #         restore-keys: Build-

  msbuild:
    #needs: buildForWSAPlayer
    name: MSBuild
    runs-on: windows-2019
    env:
      PROJECT_NAME: MRTK3Demo
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2020.3.24f1
        targetPlatform:
          - WSAPlayer # Build a UWP App.
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - uses: actions/cache@v3
        with:
          path: build/${{ matrix.targetPlatform }}
          key: Build-${{ matrix.targetPlatform }}
          restore-keys: Build-
      # - name: Look Around
      #   run: ls
      # - name: Look Around Build
      #   run: ls build
      # - name: Look Around Build/${{ matrix.targetPlatform }}
      #   run: ls build/${{ matrix.targetPlatform }}
      # - name: Look Around Build/${{ matrix.targetPlatform }}/${{ matrix.targetPlatform }}
      #   run: ls build/${{ matrix.targetPlatform }}/${{ matrix.targetPlatform }}
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Build Version
        run: |
            msbuild.exe -version
      - name: Install Unity
        run: |
          Install-Module UnitySetup -Force
          Import-Module UnitySetup
          Install-UnitySetupInstance -Cache UnitySetupInstallerCache -Installers (Find-UnitySetupInstaller -Version "${{ matrix.unityVersion }}" -Components 'Windows','Windows_IL2CPP','UWP_IL2CPP') -Verbose
        shell: pwsh
      # - name: Cache Unity
      #   uses: actions/cache@v3
      #   with:
      #     path: Library
      #     key: UnityCache-${{ matrix.unityVersion }}
      #     restore-keys: UnityCache-
      - name: Build Sln
        run: MSBuild build/${{ matrix.targetPlatform }}/${{ matrix.targetPlatform }}/${{ env.PROJECT_NAME }}.sln /nologo /nr:false /p:AppxBundle=Always /p:UapAppxPackageBuildMode=Sideload /p:AppxBundlePlatforms="ARM" /p:AppxPackageDir="./BuildAppx" /p:platform="ARM" /p:configuration="Debug"
      # - name: Look Around
      #   run: ls
      - name: Cache Build
        uses: actions/cache@v3
        with:
          path: build/${{ matrix.targetPlatform }}/${{ matrix.targetPlatform }}/${{ env.PROJECT_NAME }}/BuildAppx
          key: AppxCache-${{ matrix.unityVersion }}
          restore-keys: AppxCache-
      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ matrix.targetPlatform }}-${{ env.PROJECT_NAME }}-BuildAppx
          path: build/${{ matrix.targetPlatform }}/${{ matrix.targetPlatform }}/${{ env.PROJECT_NAME }}/BuildAppx
